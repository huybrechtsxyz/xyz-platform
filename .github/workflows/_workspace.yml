# Build and Deploy Jobs
name: _WorkspaceDeployment

on:
  workflow_call:
    inputs:
      workspace_name:
        required: true
        type: string
      workspace_file:
        required: true
        type: string
      infrastructure:
        required: true
        type: boolean
    secrets:
      BITWARDEN_TOKEN:
        required: true

env:
  # Environment variables for the pipeline
  VAR_PATH_TEMP: /tmp/app

jobs:

  # Terraform Plan and Apply
  # This job will run if the cache is not hit or if the initialize input is set to true
  # Stores the output in a JSON file and uploads it as an artifact and caches it for future runs
  terraform:
    name: Terraform Apply
    runs-on: ubuntu-latest
    if: inputs.infrastructure == true
    steps:
      # Setup YQ CLI
      - name: Setup YQ CLI
        uses: ./.github/actions/get-yq

      # Set up the Terraform CLI
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7
          terraform_wrapper: false

      # Set up GitHub Secrets
      - name: Get General Secrets
        uses: bitwarden/sm-action@v2
        id: get-secrets
        with:
          access_token: ${{ secrets.BITWARDEN_TOKEN }}
          secrets: |
            d47e736b-2db8-47d5-b46b-b2c8016ece73 > TERRAFORM_API_TOKEN
            357068b9-9f5f-4f79-940c-b2c8016cb88f > KAMATERA_API_KEY
            6c9295a8-9fa4-4d38-8929-b2c8016d9b43 > KAMATERA_API_SECRET
            6cc5b975-56a9-4d7a-80c7-b2c90151cce0 > KAMATERA_PUBLIC_KEY
            5083ae32-429d-428b-b7df-b2c901441bbb > KAMATERA_ROOT_PASSWORD

      # Check out the repo
      - name: Check Out
        uses: actions/checkout@v4

      # Run Terraform to create docker swarm cluster
      - name: Run Terraform Apply
        id: tfapply
        working-directory: ./deploy/terraform
        run: |
          echo "[*] Server deployment and configuration ..."
          export BITWARDEN_TOKEN=${{ secrets.BITWARDEN_TOKEN }}
          export VAR_PATH_TEMP=${{ env.VAR_PATH_TEMP }}
          echo "[*] Server deployment and configuration ... APPLY"
          chmod +x ../scripts/apply_terraform.sh
          chmod +x ../scripts/generate_workspace.sh
          ../scripts/apply_terraform.sh ${{ inputs.workspace_name }} ${{ inputs.workspace_file }}
          echo "[+] Server deployment and configuration ... DONE"
